

ARCH= 
#irq.c sensors.c acc-sensor.c button-sensor.c temperature-sensor.c mems.c

CONTIKI_TARGET_DIRS = . dev
ifndef CONTIKI_TARGET_MAIN
CONTIKI_TARGET_MAIN = contiki-main.c leds.c sensors.c leds-arch_stm32f4_discovery.c button-sensor.c stm32f4x7_eth_bsp.c
#led.c button.c board.c board-mbxxx.c
endif

#CFLAGS += -DAUTOSTART_ENABLE

ifdef UIP_CONF_IPV6
CFLAGS += -DWITH_UIP6=1
endif

CONTIKI_TARGET_SOURCEFILES += $(ARCH) $(CONTIKI_TARGET_MAIN)

MCU=STM32F407
include $(CONTIKI)/cpu/stm32f4x7/Makefile.stm32f4x7

OOCD_LOADFILE+=$(CONTIKI_PROJECT).hex
# if OpenOCD is in the $PATH just set OPENOCDEXE=openocd
OOCD_EXE=../../../tools/openocd-0.6.1/bin/openocd-0.6.1
# debug level
OOCD_CL=-d0
#OOCD_CL=-d3
# interface and board/target settings (using the OOCD target-library here)
OOCD_CL+=-f board/stm32f4discovery.cfg  
# initialize
OOCD_CL+=-c init
# enable "fast mode" - can be disabled for tests
#OOCD_CL+=-c "fast enable"
# commands to prepare flash-write
OOCD_CL+= -c "reset halt" -c "sleep 100" -c "wait_halt 2"
# flash-write and -verify
OOCD_CL+=-c "flash write_image erase $(OOCD_LOADFILE)" -c "sleep 100" -c "verify_image $(OOCD_LOADFILE)"
# reset target
OOCD_CL+=-c "reset run"
# terminate OOCD after programming
OOCD_CL+=-c shutdown


ifdef MOTE
%.upload: %.bin
	$(FLASHER) $(FLASHEROPTS) $< -p $(word $(MOTE), $(MOTES))
else # MOTE
%.upload: %.hex
	$(OOCD_EXE) $(OOCD_CL)
	
endif # MOTE